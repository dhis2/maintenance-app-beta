import i18n from '@dhis2/d2-i18n'

export type Section = {
    name: string
    namePlural: string
    titlePlural: string
    title: string
    parentSectionKey: string
}
type SectionMap = {
    [key: string]: Section
}

export const SECTIONS_MAP = {
    category: {
        name: 'category',
        namePlural: 'categories',
        title: i18n.t('Category'),
        titlePlural: i18n.t('Categories'),
        parentSectionKey: 'category',
    },
    categoryOption: {
        name: 'categoryOption',
        namePlural: 'categoryOptions',
        title: i18n.t('Category option'),
        titlePlural: i18n.t('Category options'),
        parentSectionKey: 'category',
    },
    categoryCombo: {
        name: 'categoryCombo',
        namePlural: 'categoryCombos',
        title: i18n.t('Category combination'),
        titlePlural: i18n.t('Category combinations'),
        parentSectionKey: 'category',
    },
    categoryOptionCombo: {
        name: 'categoryOptionCombo',
        namePlural: 'categoryOptionCombos',
        title: i18n.t('Category option combination'),
        titlePlural: i18n.t('Category option combinations'),
        parentSectionKey: 'category',
    },
    categoryOptionGroup: {
        name: 'categoryOptionGroup',
        namePlural: 'categoryOptionGroups',
        title: i18n.t('Category option group'),
        titlePlural: i18n.t('Category option groups'),
        parentSectionKey: 'category',
    },
    categoryOptionGroupSet: {
        name: 'categoryOptionGroupSet',
        namePlural: 'categoryOptionGroupSets',
        title: i18n.t('Category option group set'),
        titlePlural: i18n.t('Category option group sets'),
        parentSectionKey: 'category',
    },
    dataElement: {
        name: 'dataElement',
        namePlural: 'dataElements',
        title: i18n.t('Data element'),
        titlePlural: i18n.t('Data elements'),
        parentSectionKey: 'dataElement',
    },
    dataElementGroup: {
        name: 'dataElementGroup',
        namePlural: 'dataElementGroups',
        title: i18n.t('Data element group'),
        titlePlural: i18n.t('Data element groups'),
        parentSectionKey: 'dataElement',
    },
    dataElementGroupSet: {
        name: 'dataElementGroupSet',
        namePlural: 'dataElementGroupSets',
        title: i18n.t('Data element group set'),
        titlePlural: i18n.t('Data element group sets'),
        parentSectionKey: 'dataElement',
    },
    dataSet: {
        name: 'dataSet',
        namePlural: 'dataSets',
        title: i18n.t('Data set'),
        titlePlural: i18n.t('Data sets'),
        parentSectionKey: 'dataSet',
    },
    dataSetNotification: {
        name: 'dataSetNotificationTemplate',
        namePlural: 'dataSetNotificationTemplates',
        title: i18n.t('Data set notification'),
        titlePlural: i18n.t('Data set notification templates'),
        parentSectionKey: 'dataSet',
    },
    indicator: {
        name: 'indicator',
        namePlural: 'indicators',
        title: i18n.t('Indicator'),
        titlePlural: i18n.t('Indicators'),
        parentSectionKey: 'indicator',
    },
    indicatorType: {
        name: 'indicatorType',
        namePlural: 'indicatorTypes',
        title: i18n.t('Indicator type'),
        titlePlural: i18n.t('Indicator types'),
        parentSectionKey: 'indicator',
    },
    indicatorGroup: {
        name: 'indicatorGroup',
        namePlural: 'indicatorGroups',
        title: i18n.t('Indicator group'),
        titlePlural: i18n.t('Indicator groups'),
        parentSectionKey: 'indicator',
    },
    indicatorGroupSet: {
        name: 'indicatorGroupSet',
        namePlural: 'indicatorGroupSets',
        title: i18n.t('Indicator group set'),
        titlePlural: i18n.t('Indicator group sets'),
        parentSectionKey: 'indicator',
    },
    organisationUnit: {
        name: 'organisationUnit',
        namePlural: 'organisationUnits',
        title: i18n.t('Organisation unit'),
        titlePlural: i18n.t('Organisation units'),
        parentSectionKey: 'organisationUnit',
    },
    organisationUnitGroup: {
        name: 'organisationUnitGroup',
        namePlural: 'organisationUnitGroups',
        title: i18n.t('Organisation unit group'),
        titlePlural: i18n.t('Organisation unit groups'),
        parentSectionKey: 'organisationUnit',
    },
    organisationUnitGroupSet: {
        name: 'organisationUnitGroupSet',
        namePlural: 'organisationUnitGroupSets',
        title: i18n.t('Organisation unit group set'),
        titlePlural: i18n.t('Organisation unit group sets'),
        parentSectionKey: 'organisationUnit',
    },
    trackedEntityAttribute: {
        name: 'trackedEntityAttribute',
        namePlural: 'trackedEntityAttributes',
        title: i18n.t('Tracked entity attribute'),
        titlePlural: i18n.t('Tracked entity attributes'),
        parentSectionKey: 'programsAndTracker',
    },
    trackedEntityType: {
        name: 'trackedEntityType',
        namePlural: 'trackedEntityTypes',
        title: i18n.t('Tracked entity type'),
        titlePlural: i18n.t('Tracked entity types'),
        parentSectionKey: 'programsAndTracker',
    },
    programsAndTracker: {
        name: 'programsAndTracker',
        namePlural: 'programsAndTracker',
        titlePlural: i18n.t('Programs and Tracker'),
        title: i18n.t('Programs and Tracker'),
        parentSectionKey: 'programsAndTracker',
    },
    program: {
        name: 'program',
        namePlural: 'programs',
        title: i18n.t('Program'),
        titlePlural: i18n.t('Programs'),
        parentSectionKey: 'programsAndTracker',
    },
    programIndicator: {
        name: 'programIndicator',
        namePlural: 'programIndicators',
        title: i18n.t('Program indicator'),
        titlePlural: i18n.t('Program indicators'),
        parentSectionKey: 'programsAndTracker',
    },
    programIndicatorGroup: {
        name: 'programIndicatorGroup',
        namePlural: 'programIndicatorGroups',
        title: i18n.t('Program indicatorGroup'),
        titlePlural: i18n.t('Program indicatorGroups'),
        parentSectionKey: 'programsAndTracker',
    },
    programRule: {
        name: 'programRule',
        namePlural: 'programRules',
        title: i18n.t('Program rule'),
        titlePlural: i18n.t('Program rules'),
        parentSectionKey: 'programsAndTracker',
    },
    programRuleVariable: {
        name: 'programRuleVariable',
        namePlural: 'programRuleVariables',
        title: i18n.t('Program rule variable'),
        titlePlural: i18n.t('Program rule variables'),
        parentSectionKey: 'programsAndTracker',
    },
    programStage: {
        name: 'programStage',
        namePlural: 'programStages',
        title: i18n.t('Program stage'),
        titlePlural: i18n.t('Program stages'),
        parentSectionKey: 'programsAndTracker',
    },
    relationshipType: {
        name: 'relationshipType',
        namePlural: 'relationshipTypes',
        title: i18n.t('Relationship type'),
        titlePlural: i18n.t('Relationship types'),
        parentSectionKey: 'programsAndTracker',
    },
    validation: {
        name: 'validation',
        namePlural: 'validations',
        title: i18n.t('Validation'),
        titlePlural: i18n.t('Validations'),
        parentSectionKey: 'validation',
    },
    validationRule: {
        name: 'validationRule',
        namePlural: 'validationRules',
        title: i18n.t('Validation rule'),
        titlePlural: i18n.t('Validation rules'),
        parentSectionKey: 'validation',
    },
    validationRuleGroup: {
        name: 'validationRuleGroup',
        namePlural: 'validationRuleGroups',
        title: i18n.t('Validation rule group'),
        titlePlural: i18n.t('Validation rule groups'),
        parentSectionKey: 'validation',
    },
    validationNotification: {
        name: 'validationNotificationTemplate',
        namePlural: 'validationNotificationTemplates',
        title: i18n.t('Validation notification'),
        titlePlural: i18n.t('Validation notification templates'),
        parentSectionKey: 'validation',
    },
    other: {
        name: 'other',
        namePlural: 'other',
        title: i18n.t('Other'),
        titlePlural: i18n.t('Other'),
        parentSectionKey: 'other',
    },
    constant: {
        name: 'constant',
        namePlural: 'constants',
        title: i18n.t('Constant'),
        titlePlural: i18n.t('Constants'),
        parentSectionKey: 'other',
    },
    attribute: {
        name: 'attribute',
        namePlural: 'attributes',
        title: i18n.t('Attribute'),
        titlePlural: i18n.t('Attributes'),
        parentSectionKey: 'other',
    },
    optionSet: {
        name: 'optionSet',
        namePlural: 'optionSets',
        title: i18n.t('Option set'),
        titlePlural: i18n.t('Option sets'),
        parentSectionKey: 'other',
    },
    predictor: {
        name: 'predictor',
        namePlural: 'predictors',
        title: i18n.t('Predictor'),
        titlePlural: i18n.t('Predictors'),
        parentSectionKey: 'other',
    },
    pushAnalysis: {
        name: 'pushAnalysis',
        namePlural: 'pushAnalysis',
        title: i18n.t('Push analysis'),
        titlePlural: i18n.t('Push analyses'),
        parentSectionKey: 'other',
    },
    externalMapLayer: {
        name: 'externalMapLayer',
        namePlural: 'externalMapLayers',
        title: i18n.t('External map layer'),
        titlePlural: i18n.t('External map layers'),
        parentSectionKey: 'other',
    },
    dataApprovalLevel: {
        name: 'dataApprovalLevel',
        namePlural: 'dataApprovalLevels',
        title: i18n.t('Data approval level'),
        titlePlural: i18n.t('Data approval levels'),
        parentSectionKey: 'other',
    },
    dataApprovalWorkflow: {
        name: 'dataApprovalWorkflow',
        namePlural: 'dataApprovalWorkflows',
        title: i18n.t('Data approval workflow'),
        titlePlural: i18n.t('Data approval workflows'),
        parentSectionKey: 'other',
    },
    locale: {
        name: 'locale',
        namePlural: 'locales',
        title: i18n.t('Locale'),
        titlePlural: i18n.t('Locales'),
        parentSectionKey: 'other',
    },
    sqlView: {
        name: 'sqlView',
        namePlural: 'sqlViews',
        title: i18n.t('SQL view'),
        titlePlural: i18n.t('SQL views'),
        parentSectionKey: 'other',
    },
} as const satisfies SectionMap
